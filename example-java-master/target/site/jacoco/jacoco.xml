<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JaCoCo Maven plug-in example for Java project"><sessioninfo id="DESKTOP-3UT58PU-fa7cfba1" start="1616214864415" dump="1616214867605"/><package name="org/jacoco/examples/maven/java/MyExceptions"><class name="org/jacoco/examples/maven/java/MyExceptions/NanException" sourcefilename="NanException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jacoco/examples/maven/java/MyExceptions/IncorrectExpressionException" sourcefilename="IncorrectExpressionException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="5"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="NanException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IncorrectExpressionException.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="6" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="org/jacoco/examples/maven/java"><class name="org/jacoco/examples/maven/java/CalculatorPostFixExpression" sourcefilename="CalculatorPostFixExpression.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="PostfixToAnswer" desc="(Ljava/lang/String;)D" line="7"><counter type="INSTRUCTION" missed="2" covered="131"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPriority" desc="(C)I" line="34"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="155"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jacoco/examples/maven/java/InfixToPostfix" sourcefilename="InfixToPostfix.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="infixToPostfix" desc="(Ljava/lang/String;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="55" covered="76"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="58" covered="76"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jacoco/examples/maven/java/TransformatorWithNegativeNumbersInfixExpression" sourcefilename="TransformatorWithNegativeNumbersInfixExpression.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preparingExpression" desc="(Ljava/lang/String;)Ljava/lang/String;" line="5"><counter type="INSTRUCTION" missed="19" covered="39"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="39"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/jacoco/examples/maven/java/CheckingInfixExpression" sourcefilename="CheckingInfixExpression.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checking" desc="(Ljava/lang/String;)V" line="11"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/jacoco/examples/maven/java/Main" sourcefilename="Main.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="InfixToPostfix.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="2"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="16" mi="0" ci="13" mb="0" cb="2"/><line nr="17" mi="7" ci="3" mb="1" cb="1"/><line nr="19" mi="0" ci="3" mb="0" cb="2"/><line nr="20" mi="0" ci="9" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="1" cb="1"/><line nr="22" mi="18" ci="0" mb="2" cb="0"/><line nr="25" mi="0" ci="7" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="28" mi="9" ci="0" mb="0" cb="0"/><line nr="29" mi="18" ci="0" mb="2" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="14" mb="0" cb="2"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="76"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Main.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="4" ci="0" mb="0" cb="0"/><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="10" ci="0" mb="0" cb="0"/><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="17" ci="0" mb="6" cb="0"/><line nr="24" mi="10" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CheckingInfixExpression.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="2" ci="0" mb="0" cb="0"/><line nr="12" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="14" mi="8" ci="0" mb="2" cb="0"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="8" ci="0" mb="2" cb="0"/><line nr="20" mi="9" ci="0" mb="2" cb="0"/><line nr="21" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TransformatorWithNegativeNumbersInfixExpression.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="5" mi="0" ci="4" mb="0" cb="0"/><line nr="6" mi="0" ci="8" mb="0" cb="2"/><line nr="7" mi="0" ci="4" mb="0" cb="0"/><line nr="8" mi="0" ci="3" mb="0" cb="2"/><line nr="9" mi="0" ci="2" mb="1" cb="1"/><line nr="10" mi="10" ci="0" mb="0" cb="0"/><line nr="11" mi="0" ci="7" mb="1" cb="1"/><line nr="12" mi="9" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="39"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CalculatorPostFixExpression.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="0" ci="4" mb="0" cb="0"/><line nr="8" mi="0" ci="4" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="2"/><line nr="11" mi="1" ci="5" mb="1" cb="1"/><line nr="13" mi="0" ci="5" mb="1" cb="1"/><line nr="14" mi="0" ci="10" mb="0" cb="4"/><line nr="15" mi="0" ci="12" mb="0" cb="0"/><line nr="16" mi="1" ci="4" mb="1" cb="1"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="2"/><line nr="23" mi="0" ci="10" mb="0" cb="0"/><line nr="24" mi="0" ci="12" mb="0" cb="2"/><line nr="25" mi="0" ci="12" mb="0" cb="2"/><line nr="26" mi="0" ci="12" mb="0" cb="2"/><line nr="27" mi="0" ci="12" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="4"/><line nr="35" mi="0" ci="8" mb="0" cb="4"/><line nr="36" mi="2" ci="3" mb="1" cb="1"/><line nr="37" mi="2" ci="3" mb="1" cb="1"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="155"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="196" covered="270"/><counter type="BRANCH" missed="26" covered="46"/><counter type="LINE" missed="31" covered="43"/><counter type="COMPLEXITY" missed="25" covered="22"/><counter type="METHOD" missed="7" covered="4"/><counter type="CLASS" missed="2" covered="3"/></package><counter type="INSTRUCTION" missed="204" covered="270"/><counter type="BRANCH" missed="26" covered="46"/><counter type="LINE" missed="35" covered="43"/><counter type="COMPLEXITY" missed="27" covered="22"/><counter type="METHOD" missed="9" covered="4"/><counter type="CLASS" missed="4" covered="3"/></report>